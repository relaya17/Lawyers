// Regulatory Analysis Types

export interface RegulatoryUpdate {
    id: string
    title: string
    description: string
    source: 'knesset' | 'ministry' | 'court' | 'regulator' | 'international'
    jurisdiction: 'israel' | 'us' | 'eu' | 'international'
    type: 'law' | 'regulation' | 'ruling' | 'directive' | 'guideline'
    urgency: 'low' | 'medium' | 'high' | 'critical'
    effectiveDate: Date
    publishedDate: Date
    impactLevel: 'minor' | 'moderate' | 'major' | 'critical'
    affectedAreas: ContractArea[]
    summary: string
    fullText?: string
    sourceUrl: string
    tags: string[]
    relatedUpdates: string[]
}

export interface ContractArea {
    id: string
    name: string
    hebrewName: string
    category: 'employment' | 'commercial' | 'real_estate' | 'privacy' | 'finance' | 'tech'
    subcategories: string[]
}

export interface RegulatoryCompliance {
    contractId: string
    isCompliant: boolean
    complianceScore: number // 0-100
    violations: ComplianceViolation[]
    warnings: ComplianceWarning[]
    recommendations: ComplianceRecommendation[]
    lastChecked: Date
    nextReview: Date
    autoMonitoring: boolean
}

export interface ComplianceViolation {
    id: string
    severity: 'low' | 'medium' | 'high' | 'critical'
    type: 'missing_clause' | 'invalid_clause' | 'outdated_clause' | 'conflicting_clause'
    regulation: RegulatoryUpdate
    clauseReference?: string
    description: string
    consequence: string
    remedy: string
    estimatedFix: {
        timeMinutes: number
        complexityLevel: 'simple' | 'moderate' | 'complex'
        requiredApprovals: string[]
    }
}

export interface ComplianceWarning {
    id: string
    type: 'upcoming_change' | 'potential_conflict' | 'review_needed'
    priority: 'low' | 'medium' | 'high'
    description: string
    recommendation: string
    deadline?: Date
    relatedRegulation: string
}

export interface ComplianceRecommendation {
    id: string
    type: 'add_clause' | 'modify_clause' | 'remove_clause' | 'review_clause'
    priority: 'low' | 'medium' | 'high'
    title: string
    description: string
    suggestedClause?: string
    alternativeText?: string
    legalBasis: string
    businessImpact: 'positive' | 'neutral' | 'negative'
    implementationCost: 'low' | 'medium' | 'high'
}

export interface RegulatoryAlert {
    id: string
    type: 'new_regulation' | 'amendment' | 'deadline_approaching' | 'compliance_breach'
    severity: 'info' | 'warning' | 'error' | 'critical'
    title: string
    message: string
    affectedContracts: string[]
    actionRequired: boolean
    deadline?: Date
    autoGenerated: boolean
    acknowledgedBy?: string
    acknowledgedAt?: Date
}

export interface RegulatoryMonitoringConfig {
    contractId: string
    monitoredAreas: ContractArea[]
    jurisdictions: string[]
    alertSettings: {
        newRegulations: boolean
        amendments: boolean
        deadlineAlerts: boolean
        complianceBreaches: boolean
    }
    notificationMethods: ('email' | 'sms' | 'push' | 'dashboard')[]
    reviewFrequency: 'daily' | 'weekly' | 'monthly' | 'quarterly'
    autoUpdate: boolean
}

export interface RegulatoryImpactAnalysis {
    regulationId: string
    analysisDate: Date
    impactedContracts: {
        contractId: string
        impactLevel: 'low' | 'medium' | 'high' | 'critical'
        requiredActions: string[]
        estimatedCost: number
        urgency: 'immediate' | 'within_week' | 'within_month' | 'future'
    }[]
    overallImpact: {
        totalContracts: number
        highImpactContracts: number
        estimatedTotalCost: number
        averageComplianceTime: number
    }
    recommendations: {
        immediate: string[]
        shortTerm: string[]
        longTerm: string[]
    }
}

export interface RegulatorySource {
    id: string
    name: string
    type: 'government' | 'court' | 'regulator' | 'international'
    country: string
    url: string
    apiEndpoint?: string
    updateFrequency: string
    reliability: number // 0-100
    lastSync: Date
    isActive: boolean
}

// Request/Response Types
export interface RegulatoryAnalysisRequest {
    contractId: string
    contractText: string
    contractType: string
    jurisdiction: string
    urgency?: 'standard' | 'expedited'
    includeInternational?: boolean
    customAreas?: string[]
}

export interface RegulatoryAnalysisResponse {
    compliance: RegulatoryCompliance
    alerts: RegulatoryAlert[]
    impactAnalysis?: RegulatoryImpactAnalysis
    suggestedActions: ComplianceRecommendation[]
    confidence: number
    analysisTime: number
    nextReviewDate: Date
}

export interface RegulatoryDashboardData {
    overallComplianceScore: number
    activeAlerts: number
    upcomingDeadlines: {
        urgent: number
        thisWeek: number
        thisMonth: number
    }
    recentUpdates: RegulatoryUpdate[]
    complianceByArea: Record<string, number>
    riskTrends: {
        date: string
        score: number
    }[]
    topViolations: {
        type: string
        count: number
        severity: string
    }[]
}
